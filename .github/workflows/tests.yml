name: Tests

on:
  pull_request:
  push:
    branches: [main, test]
  merge_group:

jobs:
  pre-commit:
    name: Lint
    uses: tskit-dev/.github/.github/workflows/lint.yml@v2

  zarr-v3-compatibility:
    name: Test zarr v3 error
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          submodules: true

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v6
        with:
          python-version: "3.12"
          version: "0.8.15"

      - name: Setup venv
        run: |
          uv venv

      - name: Install zarr v3 and tsinfer
        run: |
          uv pip install -e .
          uv pip install --upgrade zarr

      - name: Test zarr v3 error
        run: |
          uv run --no-sync python -c "import tsinfer" 2>&1 | grep -q "zarr version.*is not supported"

  test:
    name: Python
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python: [ "3.10", 3.13 ]
        os:  [ macos-latest, ubuntu-24.04, windows-latest ]
    defaults:
      run:
        shell: bash
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          submodules: true

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python }}
          version: "0.8.15"

      - name: Setup venv
        run: |
          uv venv          

      - name: Install cyvcf2 #Fails if done via conda due to no windows support.
        if: matrix.os != 'windows-latest'
        run: |
          uv pip install sgkit==0.9.0 cyvcf2==0.31.3 yarl==1.9.4 aiohttp==3.9.5 requests==2.32.3 

      - name: Install sgkit only on windows
        if: matrix.os == 'windows-latest'
        run: |
          uv pip install sgkit==0.9.0 

      - name: Install pip deps
        run: |
          uv pip install -r pyproject.toml --extra test

      - name: Install numpy for build
        run: |
          uv pip install "numpy>=2"

      - name: Build module
        run: |
          uv run --no-sync python setup.py build_ext --inplace

      - name: Run tests
        run: |
          uv run --no-sync python -m pytest -xv
